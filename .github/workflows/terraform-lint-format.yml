name: Terraform fmt and linter

on:
  workflow_call:
    inputs:
      terraform_version:
        description: "Version of terraform binary"
        type: string
        default: "1.9.8"
      enable_tflint:
        description: "Enable Tflint"
        type: boolean
        default: true
      tflint_severity_threshold:
        description: "Threshold of minimum failure severity for tflint. Examples - error | warning | notice"
        type: string
        default: warning
      tflint_version:
        description: "TFLint version"
        type: string
        default: v0.53.0

jobs:
  terraform-fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setting up terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "${{ inputs.terraform_version }}"
      - name: "Running format"
        run: terraform fmt --recursive --diff -check=true

  terraform-tflint:
    if: ${{ inputs.enable_tflint }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache plugin dir
        uses: actions/cache@v4
        with:
          path: ~/.tflint.d/plugins
          key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v3
        with:
          tflint_version: ${{ inputs.tflint_version }}

      - name: Init TFLint
        run: tflint --init
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Run TFLint
        run: tflint --minimum-failure-severity=${{ inputs.tflint_severity_threshold }} -f compact
